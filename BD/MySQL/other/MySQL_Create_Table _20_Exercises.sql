
CREATE DATABASE IF NOT EXISTS db_20_exercice ;
USE  db_20_exercice ;
-- ------------------------------------------------------------------
-- EX : 1
-- 1. Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id.
CREATE TABLE countries(country_id VARCHAR(2) ,country_name VARCHAR(100) , region_id VARCHAR(100));
DESC countries;
-- ------------------------------------------------------------------
-- EX : 2 
-- 2. Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id which is already exists.
CREATE TABLE IF NOT EXISTS countries(country_id VARCHAR(2) ,country_name VARCHAR(100) , region_id VARCHAR(100));
-- ------------------------------------------------------------------
-- EX : 3 
-- 3. Write a SQL statement to create the structure of a table dup_countries similar to countries.
CREATE TABLE dup_countries LIKE countries;
DESC dup_countries;
-- ------------------------------------------------------------------
-- EX : 4
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX : 5
-- 5. Write a SQL statement to create a table countries set a constraint NOT NULL.
CREATE TABLE IF NOT EXISTS countries(country_id VARCHAR(2) NOT NULL,country_name VARCHAR(100) NOT NULL, region_id VARCHAR(100) NOT NULL);

-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX : 6
-- 6. Write a SQL statement to create a table named jobs including columns job_id, job_title, min_salary, max_salary and check
--  whether the max_salary amount exceeding the upper limit 25000.
CREATE TABLE IF NOT EXISTS jobs(
job_id VARCHAR(10) PRIMARY KEY ,
job_title VARCHAR(100),
 min_salary DECIMAL(6,0),
 max_salary INT,
 CHECK(max_salary <=25000)
 );
 
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- -------------------------------------------------------------------- ------------------------------------------------------------------
-- EX :  
-- 
-- ------------------------------------------------------------------

